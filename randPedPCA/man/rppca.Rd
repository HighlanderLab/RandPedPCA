% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rppca.R
\name{rppca}
\alias{rppca}
\alias{rppca.spam}
\alias{rppca.pedigree}
\title{Fast pedigree PCA using sparse matrices and random linear algebra}
\usage{
rppca(pdg, ...)

\method{rppca}{spam}(
  pdg,
  method = "randSVD",
  rank = 10,
  depth = 3,
  numVectors = 15,
  totVar = NULL,
  center = F,
  ...
)

\method{rppca}{pedigree}(
  pdg,
  method = "randSVD",
  rank = 10,
  depth = 3,
  numVectors = 15,
  totVar = NULL,
  center = F,
  ...
)
}
\arguments{
\item{pdg}{A representation of a pedigree, see Details.}

\item{...}{optional arguments passed to methods}

\item{method}{`string` only randSVD (the default) is implemented}

\item{rank}{`integer` how many principal components to return}

\item{depth}{`integer` number of iterations for generating the range matrix}

\item{numVectors}{`integer` > `rank` to specify the oversampling for the
range matrix}

\item{totVar}{`scalar` (optional) the total variance, required for
computation of variance proportions when using an L-inverse matrix a input}

\item{center}{`logical` whether or not to (implicitly) centre the additive
relationship matrix}
}
\value{
A `list` containing:
* the principal components
* sdev, the variance components of each PC. Note that the total variance is
  not known per se and this these components cannot be used to compute the
  proportion of the total variance accounted for by each PC. However, if
  `nVecTraceEst` is specified, `rppca` will estimate the total variance and
  return variance proportions.
* vProp, the estimated variance proportions accounted for by each PC.
  Only returned if `totVar` is set.
* scale, always `FALSE`
* center, `logical` whether or not the implicit input matrix was centred
* rotation, the right singular values of the (implicit) relationship matrix.
  Only returned if `returnRotation == TRUE`
* varProps, proportion of the total variance explained by each PC. Only
  returned if starting from a pedigree object.
}
\description{
Fast pedigree PCA using sparse matrices and random linear algebra
}
\details{
The output slots are named like those of R's built in `prcomp` function.
Rotation is not returned by default as it is the transpose of the PC scores,
which are returned in `x`. `scale` and `center` are set to `FALSE`.
}
\examples{
pc <- rppca(pedLInv)
ped <- pedigree(sire=pedMeta$fid,
                dam=pedMeta$mid,
                label=pedMeta$id
                )
pc2 <- rppca(ped)

}
